hljs.registerLanguage("lisp",function(){"use strict";return function(e){
var n="[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*",i="\\|[^]*?\\|",a="(\\-|\\+)?\\d+(\\.\\d+|\\/\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\+|\\-)?\\d+)?",s={
className:"literal",begin:"\\b(t{1}|nil)\\b"},b={className:"number",variants:[{
begin:a,relevance:0},{begin:"#(b|B)[0-1]+(/[0-1]+)?"},{
begin:"#(o|O)[0-7]+(/[0-7]+)?"},{begin:"#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?"},{
begin:"#(c|C)\\("+a+" +"+a,end:"\\)"}]},g=e.inherit(e.QUOTE_STRING_MODE,{
illegal:null}),l=e.COMMENT(";","$",{relevance:0}),t={begin:"\\*",end:"\\*"},r={
className:"symbol",begin:"[:&]"+n},c={begin:n,relevance:0},d={begin:i},o={
contains:[b,g,t,r,{begin:"\\(",end:"\\)",contains:["self",s,g,b,c]},c],
variants:[{begin:"['`]\\(",end:"\\)"},{begin:"\\(quote ",end:"\\)",keywords:{
name:"quote"}},{begin:"'"+i}]},u={variants:[{begin:"'"+n},{
begin:"#'"+n+"(::"+n+")*"}]},m={begin:"\\(\\s*",end:"\\)"},v={endsWithParent:!0,
relevance:0};return m.contains=[{className:"name",variants:[{begin:n},{begin:i}]
},v],v.contains=[o,u,m,s,b,g,l,t,r,d,c],{name:"Lisp",illegal:/\S/,
contains:[b,e.SHEBANG(),s,g,l,o,u,m,c]}}}());